<% if @has_album %>
<div id="thumbs" class="navigation">
  <ul class="thumbs noscript">
        <% @media.each do |item| %>
          <li>
            <%= link_to image_tag(item.tinyurl), item.mediumurl, :name => item.image_id, :class => "thumb" %>
            <div class="caption">
              <div class="download">
                <% if item.video640url.nil? %>
                  <%= link_to "View Original", item.originalurl, :rel => "shadowbox" %>
                <% else %>
                  <%= link_to "Play Video", item.video640url, :rel => "shadowbox;height=#{item.height};width=#{item.width}" %>
                <% end %>
              </div>
              <div class="image-title">
                <%= Time.parse(item.date).strftime("%B %-d, %Y") %>
              </div>
              <div class="image-desc">
                <%= item.caption %>
              </div>
            </div>
          </li>
        <% end %>
  </ul>
</div>
<div id="gallery" class="content">
	<div id="controls" class="controls controls-galleriffic"></div>
	<div class="slideshow-container">
		<div id="loading" class="loader"></div>
		<div id="slideshow" class="slideshow"></div>
	</div>
	<div id="caption" class="caption-container"></div>
</div>
<% else %>
  <p>No photo/video album found.</p>
<% end %>

<script type="text/javascript">
Shadowbox.init({
  skipSetup: true
});

jQuery(document).ready(function($) {
	$('div.navigation').css({'width' : '250px', 'float' : 'left'});
	$('div.content').css('display', 'block');
  
	// Initially set opacity on thumbs and add
	// additional styling for hover effect on thumbs
	var onMouseOutOpacity = 0.67;
	$('#thumbs ul.thumbs li').opacityrollover({
		mouseOutOpacity:   onMouseOutOpacity,
		mouseOverOpacity:  1.0,
		fadeSpeed:         'fast',
		exemptionSelector: '.selected'
	});
  
  var gallery = $('#thumbs').galleriffic({
    numThumbs:                8, 
    preloadAhead:             10, 
		enableTopPager:           true,
		enableBottomPager:        true, 
		imageContainerSel:        '#slideshow',
		controlsContainerSel:     '#controls',
		captionContainerSel:      '#caption',
		loadingContainerSel:      '#loading',
		playLinkText:              'Play Slideshow',
		pauseLinkText:             'Pause Slideshow',
		prevLinkText:              '&lsaquo; Previous',
		nextLinkText:              'Next &rsaquo;',
		nextPageLinkText:          'Next &rsaquo;',
		prevPageLinkText:          '&lsaquo; Prev',
		enableHistory:             true,
		autoStart:                 false,
		syncTransitions:           true, 
		onSlideChange:             function(prevIndex, nextIndex) {
			// 'this' refers to the gallery, which is an extension of $('#thumbs')
			this.find('ul.thumbs').children()
				.eq(prevIndex).fadeTo('fast', onMouseOutOpacity).end()
				.eq(nextIndex).fadeTo('fast', 1.0);
		},
		onPageTransitionOut:       function(callback) {
			this.fadeTo('fast', 0.0, callback);
		},
		onPageTransitionIn:        function() {
			this.fadeTo('fast', 1.0);
		},
    onTransitionIn:              function() {
      $('#slideshow').fadeTo(1000, 1.0);
      $('#slideshow span.image-wrapper').fadeTo(1000, 1.0);
      $('#caption').fadeTo(1000, 1.0);
      $('#caption span.image-caption').fadeTo(1000, 1.0);
      $('#caption').fadeIn(1000, function() {
          Shadowbox.setup('#caption a')
      });
    }
  });
  
  /**** Functions to support integration of 
  galleriffic with the jquery.history plugin ****/
  
	// PageLoad function
	// This function is called when:
	// 1. after calling $.historyInit();
	// 2. after calling $.historyLoad();
	// 3. after pushing "Go Back" button of a browser
	function pageload(hash) {
		// alert("pageload: " + hash);
		// hash doesn't contain the first # character.
		if(hash) {
			$.galleriffic.gotoImage(hash);
		} else {
			gallery.gotoIndex(0);
		}
	}

	// Initialize history plugin.
	// The callback is called at once by present location.hash. 
	$.historyInit(pageload, "advanced.html");

	// set onlick event for buttons using the jQuery 1.3 live method
	$("a[rel='history']").live('click', function(e) {
		if (e.button != 0) return true;
					
		var hash = this.href;
		hash = hash.replace(/^.*#/, '');

		// moves to a new page. 
		// pageload is called at once. 
		// hash don't contain "#", "?"
		$.historyLoad(hash);

		return false;
	});
});
</script>
